<?php // -*-PHP-*-

$output_file = $argv[1];
if (!$output_file) exit("usage: gen/genTables <output file>");


require_once ('lib/common.inc.php');
require_once ('config/config-groups.inc.php');

$structures = getLdapInfoMultiFilters($STRUCTURES_DN, array("(supannCodeEntite=*)"), array_merge($STRUCTURES_ATTRS, [ 'supannCodeEntiteParent' => 'supannCodeEntiteParent' ]), "key");
computeStructuresLevel($structures);

$roles = getLdapInfoMultiFilters($ROLE_GENERIQUE_DN, array("(up1TableKey=*)"), $ROLE_GENERIQUE_ATTRS, "key");

$activites = getLdapInfoMultiFilters($ACTIVITE_TABLE_DN, array("(up1TableKey=*)"), $ACTIVITE_TABLE_ATTRS, "key");

$activitesUP1 = getLdapInfoMultiFilters($ACTIVITE_TABLE_DN, array("(up1TableKey={UAI:0751717J:ACT}*)"), $ACTIVITE_TABLE_ATTRS, "key");

$etablissements = getLdapInfoMultiFilters($ETABLISSEMENT_TABLE_DN, array("(&(up1TableKey=*)(!(cn=ECOLE MATERNELLE*))(!(cn=ECOLE PRIMAIRE*))(!(cn=ECOLE ELEMENTAIRE*))(!(cn=COLLEGE*)))"), $ETABLISSEMENT_TABLE_ATTRS, "key");

$supannCodesPopulation = getLdapInfoMultiFilters($BASE_DN, array("(up1TableName=supannCodePopulation)"), [ "up1TableKey" => "key", "displayName" => "name" ], "key");

$fh = fopen($output_file, "w");
if (!$fh) exit("failed to open output file $output_file");
gen($fh,
    array('structureKeyToAll' => $structures,
          'roleGeneriqueKeyToAll' => $roles),
    array('roleGeneriqueKeyToShortname' => $roles,
	  'activiteKeyToShortname' => $activites,
	  'etablissementKeyToShortname' => $etablissements,
	  'supannCodePopulationToShortname' => $supannCodesPopulation),
    array('descriptionToActivityKey' => $activitesUP1)
);
fclose($fh);

function list2map($r) {
  $map = array();
  foreach ($r as $e) {
    unset($e['modifyTimestamp']); // never useful
    $key = getAndUnset($e, "key");
    $map[$key] = $e;
  }
  return $map;
}

function list2simpleMap($r, $key_attr, $attr) {
  $map = array();
  foreach ($r as $e) {
    if (isset($e[$attr]))
      $map[$e[$key_attr]] = $e[$attr];
  }
  return $map;
}

function gen($fh, $l_all, $l_name, $l_name_rev) {

  fwrite($fh, "<?php\n\n// Generated by genTables\n\n");

  foreach ($l_all as $name => $list) {
    fwrite($fh, 'global $' . $name . '; $' . $name . ' = ');
    fwrite($fh, var_export(list2map($list), true));
    fwrite($fh, ";\n\n");
  }

  foreach ($l_name as $name => $list) {
    fwrite($fh, 'global $' . $name . '; $' . $name . ' = ');
    fwrite($fh, var_export(list2simpleMap($list, 'key', 'name'), true));
    fwrite($fh, ";\n\n");
  }

  foreach ($l_name_rev as $name => $list) {
      fwrite($fh, 'global $' . $name . '; $' . $name . ' = ');
      fwrite($fh, var_export(list2simpleMap($list, 'name', 'key'), true));
      fwrite($fh, ";\n\n");
  }

    fwrite($fh, "?>\n"); 

}

function computeStructuresLevel(&$structures) {
    $code2level = [];
    $code2struct = list2map($structures);
    $level = function ($code) use (&$code2level, &$code2struct, &$level) {
        if (!isset($code2level[$code])) {
            $struct = $code2struct[$code];
            $code2level[$code] = isset($struct["supannCodeEntiteParent"]) ? 1 + $level($struct["supannCodeEntiteParent"]) : 1;
        }
        return $code2level[$code];
    };
    foreach ($structures as &$struct) {
        $struct["level"] = $level($struct["key"]);
        unset($struct["supannCodeEntiteParent"]); // not exported
    }
}

?>
