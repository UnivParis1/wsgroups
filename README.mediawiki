wsgroups est un web-service pour rechercher des supannPerson et des groupes dans LDAP.

autocompleteUser.js est un plugin jquery permettant de transformer des simples &lt;input&gt; en web-widget.

== Web widget de recherche d'une personne ==

Voici une capture d'écran :

[[File:http://wsgroups.univ-paris1.fr/doc/test-search-supannPerson.png]]

=== Exemple complet : recherche d'une personne, retourne l'uid ===

<pre>

  <link rel="stylesheet" href="https://wsgroups.univ-paris1.fr/web-widget/jquery-ui.css" type="text/css" media="all">
  <link rel="stylesheet" href="https://wsgroups.univ-paris1.fr/web-widget/ui.theme.css" type="text/css" media="all">
  <link rel="stylesheet" href="https://wsgroups.univ-paris1.fr/web-widget/autocompleteUser.css" type="text/css" media="all">
  <script src="https://wsgroups.univ-paris1.fr/web-widget/jquery-1.7.2.min.js"></script>
  <script src="https://wsgroups.univ-paris1.fr/web-widget/jquery-ui-1.8.21.custom.min.js"></script>
  <script src="https://wsgroups.univ-paris1.fr/web-widget/autocompleteUser.js"></script>

  <input id="person" name="person" placeholder="Nom et/ou prenom" />

  <script>
   $( "#person" ).autocompleteUser(
      'https://wsgroups.univ-paris1.fr/searchUser', {}
   );
  </script>
</pre>


=== Exemple : recherche d'une personne, retourne l'adresse mail ===

(ajouter les balises &lt;link&gt; et &lt;script&gt; du premier exemple)

<pre>
  <input id="email_search" name="email" type="text" size="35" />

  <script>
   $( "#email_search" ).autocompleteUser(
      'https://wsgroups.univ-paris1.fr/searchUser', { wantedAttr: "mail" }
    );
  </script>
</pre>

=== Filtrer les résultats ===

<pre>
   $( "#student" ).autocompleteUser(url, { wsParams: { filter_eduPersonAffiliation: "student" } });
   $( "#other" ).autocompleteUser(url, { wsParams: { filter_not_eduPersonAffiliation: "student|alum" } });
</pre>

=== Liste rouge ===

Si une personne sur liste rouge correspond au critère de recherche, le widget affichera le message :

<pre>
NB : un résultat a été caché
à la demande de la personne.
</pre>

Pour ne pas avoir cette limitation, il faut utiliser le web-service "searchUserCAS". Exemple :

<pre>
   $( "#person" ).autocompleteUser(
      'https://wsgroups.univ-paris1.fr/searchUserCAS', {}
   );
</pre>

NB : pour que cela fonctionne, il faut que la page qui utilise le web-widget soit elle-même CAS-ifiée.


=== Exemple complexe : input caché et intégration dans une application JSF 1 ===

<pre>
  <tr:form defaultCommand="submitButton">
            
     <tr:inputText
             styleClass="token-autocomplete"
             shortDesc="Rechercher une personne en donnant une partie de son nom-prénom"
             value="#{uidController.token}" />
  
     <tr:outputFormatted styleUsage="instruction"
           styleClass="onsubmit-msg"
           value="" />
  
     <tr:inputText
             styleClass="uid-autocomplete" 
             inlineStyle="display: none"
             value="#{uidController.uid}" />
                     
     <tr:commandButton id="submitButton" 
             inlineStyle="display: none"
             action="#{uidController.searchAction}"/>
  </tr:form>

  <script>

  (function () {
    var select = function (event, ui) {
        // NB: this event is called before the selected value is set in the "input"

        var form = $(this).closest("form");

        form.find(".uid-autocomplete input").val(ui.item.value); 
        
        form.find(".onsubmit-msg").text("Vous avez selectionné " + ui.item.label + ". Veuillez patienter...");
        form.find("button").click();

        return false;
    };

    $( ".token-autocomplete input" ).autocompleteUser(
      '#{uidController.wsgroupsUrl}/#{uidController.authenticated ? "searchUserCAS" : "searchUser"}', { 
         select: select
      }
    );

    $( ".token-autocomplete input" ).attr('placeholder', 'Nom prénom');
    $( ".token-autocomplete input" ).handlePlaceholderOnIE();

  })();

  </script>

</pre>
